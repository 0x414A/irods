###########################################################
# This file is currently written for Terrell by Terrell.  #
# It should be made more generic over time.               #  
###########################################################

The tests in this directory have been designed to run with E-iRODS.  E-iRODS is owned by the eirods user and, therefore, the tests must be run by the eirods user.  The best way to work with this requirement is to run this test suite in a VM.

Recommended: A VirtualBox guest of Ubuntu 12.04.

########################################


To ease development, the following environment conventions were found useful:

#### VirtualBox - use the default NAT network interface for VM
# set up port forwarding to be able to see into the VM from host OS
# for ssh
VBoxManage modifyvm "Your_VM_Image_Name" --natpf1 "guestssh,tcp,,2222,,22"
# for www
VBoxManage modifyvm "Your_VM_Image_Name" --natpf1 "guestweb,tcp,,8080,,80"

#### connect to your VM from host OS terminal - removes copy/paste pain
ssh -Y -p 2222 trelvb@127.0.0.1


########################################


#### Install VM Software
sudo apt-get install git python-dev python-nose lcov apache2 python-setuptools
sudo easy_install psutil

#### On the VM, build E-iRODS with coverage enabled, and install:
cd eirods
sudo ./packaging/build.sh -c icat postgres
sudo dpkg -i linux-2.6-amd64/eirods-3.0b2-linux-2.6-amd64.deb
sudo apt-get -f install
sudo su - eirods

#### Prep web directory on VM
sudo mkdir /var/www/dev
sudo chmod 777 /var/www/dev

#### Run the test suite as eirods:
cd /var/lib/eirods/tests/pydevtest
# this command will generate a coverage report for the tests run and copy to /var/www/dev
time ./run_pydevtest_coverage.sh username [nose params]
# the resulting html should be visible from host OS
open http://127.0.0.1:8080/dev


#### Clean up (delete coverage directories and .pyc files):
./cleanup.sh


### For profiling... still a work in progress
# http://stefaanlippens.net/python_profiling_with_pstats_interactive_mode
# http://amjith.blogspot.com/2012/05/python-profiling-part-1.html
sudo apt-get install python-profiler
sudo easy_install nose-cprof nose-progressive
python -m pstats stats.dat
% sort time
% stats 10

########################################

to find files in iCAT not in the demoResc
( i was having trouble removing resources, stuff was somewhere still on disk)
$ iquest "SELECT COLL_NAME, DATA_NAME, DATA_RESC_NAME WHERE DATA_RESC_NAME not like 'demo%'"

then, to remove them, they were still tied to the bundle area...
$ irm -rf /tempZone/bundle/home/rods

then, successfully...
$ iadmin rmresc anotherResc

########################################

