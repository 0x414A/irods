Guidelines for implementing  header files for rods.

When writing a module xyz.cpp, there should be a header file xyz.hpp
associated with it.

The xyz.h should contains all decorations assoicated with xyz.cpp including:

	1) #define
	2) typedef, enum, struct ... declorations
	3) macros
	4) prototypes of functions used in xyz.cpp

and probably some more.

That is, xyz.hpp will have everything that another modules need when
they are calling routines in xyz.

xyz.h will include all of the other include files that it depends on.
Each .hpp file will have #ifdefs and #defines so that if it is included
more than once, it will only be inserted once.  If xyz.cpp needs some
include files that outside callers do not (i.e. they need not be in
xyz.hpp), then those includes can go in the xyz.cpp source file.


All global variables for the server should be declared in:
	server/include/rsGlobal.hpp
	server/include/rsGlobalExtern.hpp

and all global variables for the clientLib should be declared in:
	clientLib/include/rcGlobal.hpp
	clientLib/include/rcGlobalExtern.hpp
